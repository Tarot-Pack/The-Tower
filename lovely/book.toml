[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.regex]
target = "functions/state_events.lua"
pattern = "check_for_unlock\\(\\{type = 'ante_up', ante = G\\.GAME\\.round_resets\\.ante \\+ 1\\}\\)"
position = "after"
payload = '''
if G.GAME.modifiers.tower_ultra_scaling and G.GAME.tower_best_score ~= nil then
  G.GAME.modifiers.tower_ante_scaling = math.T_pow(G.GAME.tower_best_score, G.GAME.modifiers.tower_ante_scaling or 1)
end
'''

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "new_shop_card:juice_up()"
position = "at"
payload = '''
if new_shop_card then
    new_shop_card:juice_up()
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = """                    {n=G.UIT.C, config={align = "cm", minw = 5, minh = 0.8, padding = 0.2, r = 0.1, hover = true, colour = G.C.BLUE, button = "start_setup_run", shadow = true, func = 'can_start_run'}, nodes={
                      {n=G.UIT.R, config={align = "cm", padding = 0}, nodes={
                        {n=G.UIT.T, config={text = localize('b_play_cap'), scale = 0.8, colour = G.C.UI.TEXT_LIGHT,func = 'set_button_pip', focus_args = {button = 'x',set_button_pip = true}}}
                      }}
                    }},"""
position = "at"
payload = '''{n=G.UIT.C, config={align = "cm", minw = 5, minh = 0.8, padding = 0.2, r = 0.1, hover = true, colour = G.C.BLUE, button = ((G.TowerSetupStep == #(Tower.RenderedSetupSteps or {}) or type ~= 'New Run') and "start_setup_run") or "tower_next_setup_step", shadow = true, func = ((G.TowerSetupStep == #(Tower.RenderedSetupSteps or {}) or type ~= 'New Run') and 'can_start_run') or nil}, nodes={
        {n=G.UIT.R, config={align = "cm", padding = 0}, nodes={
            {n=G.UIT.T, config={text = ((G.TowerSetupStep == #(Tower.RenderedSetupSteps or {}) or type ~= 'New Run') and localize('b_play_cap')) or localize('b_next'), scale = 0.8, colour = G.C.UI.TEXT_LIGHT,func = 'set_button_pip', focus_args = {button = 'x',set_button_pip = true}}}
        }}
    }},'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = """local _stake = G.forced_stake or G.PROFILES[G.SETTINGS.profile].MEMORY.stake or 1"""
position = "after"
payload = '''local _book = G.forced_book or G.PROFILES[G.SETTINGS.profile].MEMORY.book or G.tower_default_book'''
match_indent = true

[[patches]]
[patches.regex]
target = "functions/button_callbacks.lua"
pattern = """challenge = _challenge"""
position = "after"
payload = ''', book = _book'''


[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "self.GAME.selected_back:apply_to_run()"
position = "after"
payload = """
Tower.setup_book(args.book)
"""
match_indent = true